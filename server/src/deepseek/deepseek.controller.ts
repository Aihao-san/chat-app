import { Controller, Post, Body, BadRequestException } from '@nestjs/common';
import { sendMessageToDeepSeek } from './deepseek';

const maxHistoryLength = 10; // ‚úÖ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ 10 —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∏—Å—Ç–æ—Ä–∏–∏
let chatHistory: Array<{ role: string; content: string }> = [];

@Controller('api/deepseek')
export class DeepseekController {
  @Post()
  async chat(@Body() body: any) {
    try {
      console.log('üì© –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ –∑–∞–ø—Ä–æ—Å–∞:', body);

      if (!body || typeof body !== 'object' || !body.message) {
        console.error('‚ùå –û—à–∏–±–∫–∞: —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!', body);
        throw new BadRequestException(
          '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Ç–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞: message –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç',
        );
      }

      let message: string = String(body.message).trim();
      console.log('üì• –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π:', message);

      // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –æ—à–∏–±–∫–∏ –∫–æ–¥–∏—Ä–æ–≤–∫–∏
      chatHistory = chatHistory.filter(
        (entry) => !entry.content.includes('??????'),
      );

      // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      chatHistory.push({ role: 'user', content: message });

      // –û–±—Ä–µ–∑–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é, –µ—Å–ª–∏ –ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç
      if (chatHistory.length > maxHistoryLength) {
        chatHistory = chatHistory.slice(-maxHistoryLength);
      }

      const response = await sendMessageToDeepSeek(message, chatHistory);

      chatHistory.push({ role: 'assistant', content: response.message });

      return response;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
      throw error;
    }
  }
}
