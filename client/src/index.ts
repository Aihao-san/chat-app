import { io } from 'socket.io-client';

const socket = io('http://localhost:3000', {
  transports: ['websocket'], // WebSocket only
  reconnection: true,
});

document.addEventListener('DOMContentLoaded', () => {
  const chatWindow = document.getElementById('chat-window') as HTMLDivElement;
  const userInput = document.getElementById('user-input') as HTMLInputElement;
  const sendButton = document.getElementById(
    'send-button'
  ) as HTMLButtonElement;
  const clearChatButton = document.getElementById(
    'clear-chat'
  ) as HTMLButtonElement;

  if (!chatWindow || !userInput || !sendButton || !clearChatButton) {
    console.error('‚ùå –û—à–∏–±–∫–∞: –Ω–µ –Ω–∞–π–¥–µ–Ω—ã —ç–ª–µ–º–µ–Ω—Ç—ã —á–∞—Ç–∞!');
    return;
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç
  const addMessageToChat = (message: string, isUser = true) => {
    const messageElement = document.createElement('div');
    messageElement.classList.add(
      'message',
      isUser ? 'user-message' : 'bot-message'
    );
    messageElement.textContent = message;
    chatWindow.appendChild(messageElement);
    chatWindow.scrollTop = chatWindow.scrollHeight;
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
  sendButton.addEventListener('click', () => {
    const userMessage = userInput.value.trim();
    if (userMessage === '') return;

    console.log('üì® –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–∂–∞—Ç–∞:', userMessage);

    addMessageToChat(userMessage, true);
    userInput.value = '';

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ WebSocket
    socket.emit('message', userMessage);
  });

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è Enter
  userInput.addEventListener('keypress', (e) => {
    if (e.key === 'Enter') {
      sendButton.click();
    }
  });

  // –û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞
  clearChatButton.addEventListener('click', () => {
    console.log('üßπ –û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞');
    chatWindow.innerHTML = '';
  });

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ —Å–µ—Ä–≤–µ—Ä–∞
  socket.on('message', (response: string) => {
    console.log('üì© –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', response);
    addMessageToChat(response, false);
  });

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
  socket.on('error', (error: string) => {
    console.error('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:', error);
    addMessageToChat('–û—à–∏–±–∫–∞: ' + error, false);
  });

  console.log('‚úÖ –ö–Ω–æ–ø–∫–∏ –∏ WebSocket –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
});
